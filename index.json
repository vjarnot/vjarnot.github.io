[{"content":"Supermicro LSI HBA Fan Addition When I initially installed my eBay-acquired HBA to flash its firmware , I noticed after a bit that the heatsink was very hot to the touch. My infrared thermometer read the heatsink at over 135° F, so the heatsink was approaching 60° C; the chip will be - obviously - hotter than the heatsink. This was at idle with no disks plugged in. I\u0026rsquo;ve read that these LSI chips would ultimately prefer a life at or below 55° C, so I\u0026rsquo;ve added a fan to my HBA.\nI got started with Noctua fans back in the bad-old-days when computer fans were generally garbage with a few exceptions. These days, they\u0026rsquo;re generally decent with a few exceptions, but inertia is a helluva drug, so I used the NF-A4x20 PWM .\nI\u0026rsquo;ve seen 3D-printed mounts, I\u0026rsquo;ve seen screws - both into the heatsink and through the heatsink, and I\u0026rsquo;ve seen zipties. I don\u0026rsquo;t think I\u0026rsquo;ve seen someone do their zipties as I have - around the heatsink, not the HBA, so I thought I\u0026rsquo;d throw up some pictures in case it helps anyone.\n","permalink":"https://vjarnot.github.io/posts/2023-02-12-supermicro-lsi-hba-plus-noctua/","summary":"Supermicro LSI HBA Fan Addition When I initially installed my eBay-acquired HBA to flash its firmware , I noticed after a bit that the heatsink was very hot to the touch. My infrared thermometer read the heatsink at over 135° F, so the heatsink was approaching 60° C; the chip will be - obviously - hotter than the heatsink. This was at idle with no disks plugged in. I\u0026rsquo;ve read that these LSI chips would ultimately prefer a life at or below 55° C, so I\u0026rsquo;ve added a fan to my HBA.","title":"Supermicro AOC-S3008L-L8E + Noctua NF-A4x20"},{"content":"LSI HBA IT-mode Firmware Flashing Oh, what fun we\u0026rsquo;ll have: Flashing an IT-mode firmware to an LSI 9300-8i Supermicro HBA on a UEFI system.\nYou\u0026rsquo;re likely here because - like me - you\u0026rsquo;re struggling to either figure out how to flash your HBA, or how to get your relatively-recent desktop PC to actually boot FreeDOS and work (spoiler: I don\u0026rsquo;t go down the FreeDOS route here).\nIf you want a real guide, read this: https://www.truenas.com/community/resources/detailed-newcomers-guide-to-crossflashing-lsi-9211-9300-9305-9311-9400-94xx-hba-and-variants.54/ If my rambling doesn\u0026rsquo;t interest you, skip down to the good stuff Background Currently the media and other bulk-storage needs of our household are handled by an Intel Rapid Storage RAID 5 array of 4x 3TB disks sitting in my desktop PC. This arrangement may sound impressive if your concept of bulk storage is limited to finding yet another cheap external hard drive to plug in, but is laughable to the NAS-enthusiast community.\nGiven that it\u0026rsquo;s time for a new PC for myself, I got to thinking about acquiring a \u0026lsquo;proper\u0026rsquo; consumer-grade NAS to untether my day-to-day computer from its NAS-ish duties. As tends to happen, the rabbit-hole of research led to me learn a bit about Synology and its competitors, work out a game-plan, get an Amazon shopping cart populated and ready to go, and completely change my mind and reverse course.\nEnter the new plan: build myself a new PC, repurpose current PC to serve as a NAS. Enter TrueNAS: https://www.truenas.com/truenas-scale/ So what? So the recommended approaches for TrueNAS are\nBuy a box from iXsystems Buy a server on eBay, modify as/if needed, and install TrueNAS Those don\u0026rsquo;t meet my goal of repurposing my existing desktop PC, so I\u0026rsquo;ll be going with the not-particularly-recommended route of:\nDo what you can to a PC to make it TrueNAS-viable (for home use, if you\u0026rsquo;re doing this professionally, close this browser tab immediately). So under the guise of doing what\u0026rsquo;s reasonable to make this not suck, I\u0026rsquo;ll be reusing the PC, but hooking up new HDDs to a Host Bus Adapater (HBA) rather than directly to the SATA ports of my motherboard.\nSo why are we flashing firmware? The canonically-recommended HBAs for TrueNAS are those that utilize LSI chips. A ton of different manufacturers have made HBAs with these chips. Within that plethora, there\u0026rsquo;s the 92xx series, the 93xx series, and others - this is definitely not the place to learn all about LSI HBAs.\nI\u0026rsquo;ll be using a Supermicro card with a 9300-8i chip on it, because that\u0026rsquo;s the one I got on eBay. If you\u0026rsquo;re heading down this path, do your research and confirm that the card you\u0026rsquo;re buying has the chip you want (and you want that chip because you read enough on the TrueNAS forums to know it\u0026rsquo;ll work).\nBut seriously, why? This is over-simplified to a probably-dangerous point, but here goes:\nHBAs operate in one of two (that we\u0026rsquo;re concerned with) modes:\nIR: RAID mode [no bueno] IT: not RAID mode [yes bueno] For use with TrueNAS, your HBA absolutely must be in IT mode - and this is set via the firmware that your HBA is running. So - we need to flash the IT mode firmware to our HBA.\nAlso, there\u0026rsquo;s this: https://www.truenas.com/community/resources/lsi-9300-xx-firmware-update.145/ . Specifically for the LSI 9300 series, IT mode is not enough, it needs to be IT mode using the specific firmware version available for download at that link.\nFlashing Overview We need four things: the HBA (installed), the firmware file, the software to flash the firmware to the card, and a USB stick. We\u0026rsquo;ve covered the first two, regarding the third: you\u0026rsquo;re going to want sas2flash for 92xx cards, and sas3flash for 93xx cards.\nhttps://www.broadcom.com/support/knowledgebase/1211161501344/flashing-firmware-and-bios-on-lsi-sas-hbas TL;DR: Let\u0026rsquo;s Flash! Format your USB stick to FAT32 (no you don\u0026rsquo;t need a bootable disk, just standard FAT32) Download EFI Shell: https://github.com/pbatard/UEFI-Shell (click on Releases and download the ISO) Extract the ISO Make an efi/boot directory structure on your USB stick Copy bootx64.efi from the ISO to /efi/boot/ on the USB stick Download sas3flash.efi (or sas2flash.efi if you\u0026rsquo;re flashing a 92xx card): https://www.broadcom.com/support/knowledgebase/1211161501344/flashing-firmware-and-bios-on-lsi-sas-hbas (very bottom of the page, note we want the EFI version) Copy sas3flash.efi to the root directory of your USB stick Acquire firmware - you can probably find this on Broadcom\u0026rsquo;s site, after much googling and reading the TrueNAS forums for the right link for your card. Or use the version from https://www.truenas.com/community/resources/lsi-9300-xx-firmware-update.145/ if you\u0026rsquo;ve got a 9300-xx card. Copy SAS9300_8i_IT.bin (find the file that matches the chip on your card) to the root directory of your USB stick Disable secure boot in your BIOS (on my ASUS mb, this required getting into the Advanced settings) Boot your USB stick Now you\u0026rsquo;re in an EFI shell! If it\u0026rsquo;s your first time, yes, I agree, it does look like an OS from the 80s.\nHere are the commands I used to flash my firmware:\n1 2 3 4 5 fs0: sas3flash.efi -listall sas3flash.efi -c 0 -list sas3flash.efi -c 0 -f FILENAME sas3flash.efi -c 0 -list fs0: - this is us just changing \u0026ldquo;directories\u0026rdquo; to get to our USB stick root (the 0 may vary if you\u0026rsquo;ve got multiple USB drives plugged in) sas3flash.efi -listall - you\u0026rsquo;re going to want to see your HBA show up here, if it doesn\u0026rsquo;t there\u0026rsquo;s no point in proceeding sas3flash.efi -c 0 -list - I assume that, like me, there\u0026rsquo;s only one HBA in your system, so we reference it as 0 This\u0026rsquo;ll show you what firmware you\u0026rsquo;ve currently got, as well as the mode (IR or IT) your HBA is in While you\u0026rsquo;re here, write down your SAS address, it may come in handy sas3flash.efi -c 0 -f FILENAME This is where the magic happens, in my case FILENAME was SAS9300_8i_IT.bin sas3flash.efi -c 0 -list - Confirmation: check that your firmware version is what you want it to be, and that you\u0026rsquo;re in IT mode Additional Thoughts These cards are designed for server chassis running in racks in datacenters. I.e., lots and lots of airflow: fans so loud that you\u0026rsquo;d never allow them in your house. So they\u0026rsquo;ve got heatsinks but no fans on the cards, I\u0026rsquo;ve rigged a 40mm fan to mine, I recommend you do the same.\n","permalink":"https://vjarnot.github.io/posts/2023-02-11-lsi-firmware-flashing/","summary":"LSI HBA IT-mode Firmware Flashing Oh, what fun we\u0026rsquo;ll have: Flashing an IT-mode firmware to an LSI 9300-8i Supermicro HBA on a UEFI system.\nYou\u0026rsquo;re likely here because - like me - you\u0026rsquo;re struggling to either figure out how to flash your HBA, or how to get your relatively-recent desktop PC to actually boot FreeDOS and work (spoiler: I don\u0026rsquo;t go down the FreeDOS route here).\nIf you want a real guide, read this: https://www.","title":"LSI HBA Flashing"},{"content":"Extremely-basic Hugo + Github Pages Step-by-step Guide Background https://pages.github.com/ https://gohugo.io/getting-started/quick-start/ Setup I mostly followed the steps outlined here https://gohugo.io/hosting-and-deployment/hosting-on-github/ with some minor changes.\nHere\u0026rsquo;s what I did (this assumes you have a linux environment you\u0026rsquo;re going to work in, and a github account):\nFoundation Create repo for your github pages site If you want your site available at USERNAME.github.io, the repo must be named USERNAME.github.io Clone the repo: git clone https://github.com/USERNAME/USERNAME.github.io Install Hugo on my Ubuntu instance, this was a simple sudo apt install hugo Create Site Generate your site (adapted from https://gohugo.io/getting-started/quick-start/ )\nThis assumes that you did the git clone from ~/projects and you\u0026rsquo;re still in ~/projects\nhugo new site USERNAME.github.io --force --force is here because the USERNAME.github.io directory already exists cd USERNAME.github.io Install a theme git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke Create a hello-world blog post hugo new posts/hello-world.md Edit hello-world.md and remove draft: true Test site run hugo server open localhost:1313 in a browser Github Pages Integration NOTE: this assumes you want your site available at USERNAME.github.io - github expects those type of github pages to be published from the main branch. However, we\u0026rsquo;re going to deviate and commit our source to the main branch, while publishing from the gh-pages branch\nFirst create a gh-pages branch in your repo on github. You\u0026rsquo;ll never need to check out this branch - all your work will be done in main, but the Github action we create below will build your site and commit it to gh-pages and Github will be configured to publish from gh-pages.\nThese steps are adapted from https://gohugo.io/hosting-and-deployment/hosting-on-github/ mkdir -p .github/workflows in your project root (in the example used throughout, that would be ~/projects/USERNAME.github.io) create .github/workflows/gh-pages.yml: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 name: github pages on: push: branches: - main # Set a branch that will trigger a deployment pull_request: jobs: deploy: permissions: contents: write runs-on: ubuntu-22.04 steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public You can find this yaml in the Hugo Docs, but I had to add lines 10-11 to get this working. Remember how I mentioned that github pages wants to publish from your main branch? Let\u0026rsquo;s change that: On your github repo, click Settings, then Pages Under Build and Deployment, select gh-pages Success? Success! What you should have now is a very simple and streamlined workflow:\nYou checkout, edit, commit, and push to the main branch Your github action executes on push, generates your site, and commits that output to the gh-pages branch Github sees the commit to gh-pages and publishes your site Troubleshooting Check the Actions tab on your Github repo - you should see an action with the same name as your commit comment - this is running the workflow we defined above. If that\u0026rsquo;s erroring, you should probably fix it ;) Subsequent to that you should see Github\u0026rsquo;s pages build and deployment action - that\u0026rsquo;s the Github Pages magic that actually publishes your site.\n","permalink":"https://vjarnot.github.io/posts/2023-02-10-github-pages-and-hugo-bootstrap/","summary":"Extremely-basic Hugo + Github Pages Step-by-step Guide Background https://pages.github.com/ https://gohugo.io/getting-started/quick-start/ Setup I mostly followed the steps outlined here https://gohugo.io/hosting-and-deployment/hosting-on-github/ with some minor changes.\nHere\u0026rsquo;s what I did (this assumes you have a linux environment you\u0026rsquo;re going to work in, and a github account):\nFoundation Create repo for your github pages site If you want your site available at USERNAME.github.io, the repo must be named USERNAME.github.io Clone the repo: git clone https://github.","title":"Github Pages and Hugo"}]